version: '3'

services:

  redis:
    image: redis:5-alpine
    container_name: redis

  backend:
    restart: always
    container_name: backend
    build:
      context: .
      dockerfile: ./Dockerfiles/backend/Dockerfile
    command: sh -c "python manage.py collectstatic --noinput --clear & gunicorn afskspb.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./:/usr/src/afskspb/
      - static_volume:/usr/src/afskspb/static
      - media_volume:/usr/src/afskspb/media
    expose:
      - 8000
    env_file:
      - ./Dockerfiles/backend/.env.prod
    depends_on:
      - redis
      - db

  db:
    image: postgres:13.1-alpine
    restart: always
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_password
      - POSTGRES_DB=db_name
    expose:
      - 5432

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: ./Dockerfiles/backend/Dockerfile
    command: celery -A afskspb worker -l INFO --without-gossip --without-mingle
    env_file:
      - ./Dockerfiles/backend/.env.prod
    depends_on:
      - redis

  celery_beat:
    container_name: celery_beat
    build:
      context: .
      dockerfile: ./Dockerfiles/backend/Dockerfile
    command: celery -A afskspb beat -l INFO --max-interval 60
    env_file:
      - ./Dockerfiles/backend/.env.prod
    depends_on:
      - redis

  nginx:
    restart: always
    container_name: nginx
    build:
      context: .
      dockerfile: ./Dockerfiles/nginx/Dockerfile
    volumes:
      - static_volume:/usr/src/afskspb/static
      - media_volume:/usr/src/afskspb/media
    ports:
      - 1998:80
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
  static_volume:
  media_volume:
